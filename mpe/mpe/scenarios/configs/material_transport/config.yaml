#Arguments needed by main.py
scenario: MaterialTransport #name of the folder inside scenarios

n_actions: 5 #The number of actions available for the agent
n_agents: 4
shared_reward: True
max_steps: 100 # maximum number of steps per episode

test: False #Set this to change the agents that are being selected from
#If the following two are False, make sure resample is also False
capability_aware: True #Either the agent know what class they're in or their capabilities. Make sure this matches training
agent_id: False #If capability_aware is False, this determines if the class id is appended instead or not

#Information needed to generate the predefined agents and coalitions
n_train_agents: 20
n_test_agents: 20
n_coalitions: 5
coalition_file: "custom_5_coalitions_4_robots.yaml"

traits:
  lumber:
    distribution: 'uniform'
    low: 0.0
    high: 5.0
  water:
    distribution: 'uniform'
    low: 0.0
    high: 5.0
### For experiment 2, turn load_from_predefined_coalitions to false
load_from_predefined_coalitions: True # Load coalitions from 'predefined_coalition.yaml'. If False, then loads new agents based on traits distribution.
load_from_predefined_agents: False # Uses the predefined agents from the predefined_coalition file, but samples new coalitions from these agents.
manual_coalition_selection: False # IF true, the only sample the coalition coalition_selection from the colaition file for "n_agents"
coalition_selection: 0
resample: True #Set to true to resample the agents every episode
resample_frequency: 10

